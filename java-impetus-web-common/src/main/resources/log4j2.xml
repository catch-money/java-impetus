<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">
    <Properties>
        <Property name="appName">${spring:spring.application.name}</Property>
        <Property name="PID">${sys:pid}</Property>
        <Property name="LOG_PATH">/opt/app/logs</Property>
        <Property name="LOG_EXCEPTION_CONVERSION_WORD">%xwEx</Property>
        <Property name="LOG_LEVEL_PATTERN">%-5level</Property>
        <Property name="LOG_DATE_FORMAT_PATTERN">yyyy-MM-dd'T'HH:mm:ss.SSSXXX</Property>
        <Property name="CONSOLE_LOG_PATTERN">%d{${LOG_DATE_FORMAT_PATTERN}} %clr{${LOG_LEVEL_PATTERN}} %clr{${sys:PID}}{magenta} --- [${appName}] [%t{10}] %clr{%logger{36}}{cyan} : %m%n%throwable</Property>
        <Property name="FILE_LOG_PATTERN">%d{${LOG_DATE_FORMAT_PATTERN}} ${LOG_LEVEL_PATTERN} %clr{${sys:PID}}{magenta} [%t{10.10}] [%traceId] [%X{token}] %logger{36} : %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
    </Properties>
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <PatternLayout pattern="${sys:CONSOLE_LOG_PATTERN}"/>
        </Console>
        <RollingFile name="InfoFile" fileName="${sys:LOG_PATH}/info.log"
                     filePattern="${sys:LOG_PATH}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="${sys:FILE_LOG_PATTERN}"/>
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="4096 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
        <RollingFile name="WarnFile" fileName="${sys:LOG_PATH}/warn.log"
                     filePattern="${sys:LOG_PATH}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="${sys:FILE_LOG_PATTERN}"/>
            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="4096 MB"/>
            </Policies>
            <!-- 指定每天的最大压缩包个数，默认20个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
        <RollingFile name="ErrorFile" fileName="${sys:LOG_PATH}/error.log"
                     filePattern="${sys:LOG_PATH}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="${sys:FILE_LOG_PATTERN}"/>
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="4096 MB"/>
            </Policies>
            <!-- 指定每天的最大压缩包个数，默认20个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
    </Appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <Logger name="com.netflix.config.ChainedDynamicProperty" level="warn"/>
        <Logger name="org.apache.catalina.startup.DigesterFactory" level="error"/>
        <Logger name="org.apache.catalina.util.LifecycleBase" level="error"/>
        <Logger name="org.apache.coyote.http11.Http11NioProtocol" level="warn"/>
        <Logger name="org.apache.tomcat.util.net.NioSelectorPool" level="warn"/>
        <Logger name="org.hibernate.validator.internal.util.Version" level="warn"/>
        <Logger name="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler" level="warn"/>
        <Logger name="springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator" level="warn"/>
        <logger name="org.apache.sshd.common.util.SecurityUtils" level="warn"/>
        <logger name="org.springframework.boot.actuate.endpoint.jmx" level="warn"/>
        <Root level="info">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="InfoFile"/>
            <AppenderRef ref="WarnFile"/>
            <AppenderRef ref="ErrorFile"/>
        </Root>
    </loggers>
</configuration>